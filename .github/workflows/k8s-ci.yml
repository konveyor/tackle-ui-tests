name: Test UI TIER1 , TIER2 , TIER3


jobs:
  k8s-tier1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tackle
        uses: actions/checkout@v2
        with:
          repository: konveyor/tackle
          path: tackle

      - name: Setup minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main
        with:
          memory: 'max'
          cpus: 'max'


      - name: Install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-konveyor@main
        with:
          tackle_cr: '{"kind":"Tackle","apiVersion":"tackle.konveyor.io/v1alpha1","metadata":{"name":"tackle"},"spec":{"image_pull_policy":"IfNotPresent","feature_auth_required":true}}'
      
      - name: Wait for pods to be ready. 
        run: sleep 150s
        shell: bash

      - name: Check pod status
        run: kubectl get pods -n konveyor-tackle

      - name: Wait for Ingress
        shell: bash
        run: |
          bash -c 'external_ip="";
          echo $external_ip;
          while [[ -z $external_ip ]] 
            do 
              echo "Waiting for end point..."
                external_ip=$(kubectl get ingress tackle --template="{{range.status.loadBalancer.ingress}}{{.ip}}{{end}}" -n konveyor-tackle);[[ -z $external_ip ]] &&
                echo $external_ip;
                sleep 10;
            done
          echo "End point ready:" &&
          echo $external_ip;
          export endpoint=$(minikube ip);
          echo "CYPRESS_tackleUrl=https://$endpoint" >>$GITHUB_ENV'
     
      - name: Checkout to branch
        uses: actions/checkout@v2
      - name: Install NPM
        run: npm install .
      - name: Run cypress login test
        run: npx cypress run --spec "cypress/e2e/tests/login.test.ts" --env user="admin",pass="password",tackleUrl=${{ env.CYPRESS_tackleUrl }}
      - name: Run Tier1 test cases
        run: |
          CYPRESS_INCLUDE_TAGS=@tier1 npx cypress run --spec **/*.test.ts --env user=admin,pass=Dog8code,tackleUrl=${{ env.CYPRESS_tackleUrl }}

  k8s-tier2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tackle
        uses: actions/checkout@v2
        with:
          repository: konveyor/tackle
          path: tackle

      - name: Setup minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main
        with:
          memory: 'max'
          cpus: 'max'


      - name: Install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-konveyor@main
        with:
          tackle_cr: '{"kind":"Tackle","apiVersion":"tackle.konveyor.io/v1alpha1","metadata":{"name":"tackle"},"spec":{"image_pull_policy":"IfNotPresent","feature_auth_required":true}}'
      
      - name: Wait for pods to be ready. 
        run: sleep 150s
        shell: bash

      - name: Check pod status
        run: kubectl get pods -n konveyor-tackle

      - name: Wait for Ingress
        shell: bash
        run: |
          bash -c 'external_ip="";
          echo $external_ip;
          while [[ -z $external_ip ]] 
            do 
              echo "Waiting for end point..."
                external_ip=$(kubectl get ingress tackle --template="{{range.status.loadBalancer.ingress}}{{.ip}}{{end}}" -n konveyor-tackle);[[ -z $external_ip ]] &&
                echo $external_ip;
                sleep 10;
            done
          echo "End point ready:" &&
          echo $external_ip;
          export endpoint=$(minikube ip);
          echo "CYPRESS_tackleUrl=https://$endpoint" >>$GITHUB_ENV'
     
      - name: Checkout to branch
        uses: actions/checkout@v2
      - name: Install NPM
        run: npm install .
      - name: Run cypress login test
        run: npx cypress run --spec "cypress/e2e/tests/login.test.ts" --env user="admin",pass="password",tackleUrl=${{ env.CYPRESS_tackleUrl }}
      - name: Run Tier2 test cases
        run: |
         CYPRESS_INCLUDE_TAGS=@tier2 npx cypress run --spec **/*.test.ts --env user=admin,pass=Dog8code,tackleUrl=${{ env.CYPRESS_tackleUrl }}
  
  k8s-tier3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tackle
        uses: actions/checkout@v2
        with:
          repository: konveyor/tackle
          path: tackle

      - name: Setup minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main
        with:
          memory: 'max'
          cpus: 'max'


      - name: Install konveyor
        uses: konveyor/tackle2-operator/.github/actions/install-konveyor@main
        with:
          tackle_cr: '{"kind":"Tackle","apiVersion":"tackle.konveyor.io/v1alpha1","metadata":{"name":"tackle"},"spec":{"image_pull_policy":"IfNotPresent","feature_auth_required":true}}'
      
      - name: Wait for pods to be ready. 
        run: sleep 150s
        shell: bash

      - name: Check pod status
        run: kubectl get pods -n konveyor-tackle

      - name: Wait for Ingress
        shell: bash
        run: |
          bash -c 'external_ip="";
          echo $external_ip;
          while [[ -z $external_ip ]] 
            do 
              echo "Waiting for end point..."
                external_ip=$(kubectl get ingress tackle --template="{{range.status.loadBalancer.ingress}}{{.ip}}{{end}}" -n konveyor-tackle);[[ -z $external_ip ]] &&
                echo $external_ip;
                sleep 10;
            done
          echo "End point ready:" &&
          echo $external_ip;
          export endpoint=$(minikube ip);
          echo "CYPRESS_tackleUrl=https://$endpoint" >>$GITHUB_ENV'
     
      - name: Checkout to branch
        uses: actions/checkout@v2
      - name: Install NPM
        run: npm install .
      - name: Run cypress login test
        run: npx cypress run --spec "cypress/e2e/tests/login.test.ts" --env user="admin",pass="password",tackleUrl=${{ env.CYPRESS_tackleUrl }}
      - name: Run Tier3 test cases
        run: |
         CYPRESS_INCLUDE_TAGS=@tier3 npx cypress run --spec **/*.test.ts --env user=admin,pass=Dog8code,tackleUrl=${{ env.CYPRESS_tackleUrl }}